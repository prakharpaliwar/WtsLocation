CREATE TABLE LOCATIONS
(
  CLIENTMNEMONIC                 VARCHAR2(25 BYTE),
  MILLENVIRONMENT                VARCHAR2(25 BYTE),
  CLIENTNAME                     VARCHAR2(50 BYTE),
  DEFAULT_LOCATION               VARCHAR2(50 BYTE),
  DEVICE_LOCATION                VARCHAR2(50 BYTE),
  DEFAULT_PRINTER                VARCHAR2(50 BYTE),
  POWERCHART_PRINTER             VARCHAR2(50 BYTE),
  PCID                           VARCHAR2(50 BYTE),
  DOCSDEFAULTPRINTER             VARCHAR2(50 BYTE),
  REPORTDEFAULTPRINTER           VARCHAR2(50 BYTE),
  DISPFROMLOC                    VARCHAR2(50 BYTE),
  PHARETAILSR                    VARCHAR2(50 BYTE),
  PHARETAILWS                    VARCHAR2(50 BYTE),
  PHALTCSR                       VARCHAR2(50 BYTE),
  PHALTCWS                       VARCHAR2(50 BYTE),
  PHAHOMESR                      VARCHAR2(50 BYTE),
  PHAHOMEWS                      VARCHAR2(50 BYTE),
  PHAMAILSR                      VARCHAR2(50 BYTE),
  PHAMAILWS                      VARCHAR2(50 BYTE),
  WINDEFAULTPRINTER              VARCHAR2(100 BYTE),
  WINBACKUPPRINTER               VARCHAR2(100 BYTE),
  AUTHENTICATIONMETHOD           VARCHAR2(50 BYTE),
  IDLESESSIONTIMEOUT             VARCHAR2(50 BYTE),
  IDLESESSIONTIMEOUTCOUNTDOWN    VARCHAR2(50 BYTE),
  SECUREDSESSIONTIMEOUT          VARCHAR2(50 BYTE),
  MANUALLYSECUREDSESSIONTIMEOUT  VARCHAR2(50 BYTE),
  SINGLEACTIVESESSION            VARCHAR2(50 BYTE),
  SECUREDSESSIONMANUALCLOSE      VARCHAR2(50 BYTE),
  DIALOGTIMEOUT                  VARCHAR2(50 BYTE),
  SECUREDSESSIONMANUALCLOSEAUTH  VARCHAR2(50 BYTE),
  CRMTIMERENABLED                VARCHAR2(50 BYTE),
  LOGGINGSEVERITY                VARCHAR2(50 BYTE),
  DISCONNECTALLOWED              VARCHAR2(50 BYTE),
  DYNAMICLOCATIONALLOWED         VARCHAR2(50 BYTE),
  BMDI_DATA                      VARCHAR2(50 BYTE),
  BMDI_ODBC_ADR                  VARCHAR2(50 BYTE),
  BMDI_ODBC_ACT                  VARCHAR2(50 BYTE),
  TWAINMODEL                     VARCHAR2(50 BYTE),
  AP_IMAGE_CAPTURE		 VARCHAR2(50 BYTE),
  AP_IMAGE_STATION		 VARCHAR2(50 BYTE),
  Default_Tamperproof_Printer	VARCHAR2(100 BYTE),
  Default_Tamperproof_Print_Tray		 VARCHAR2(50 BYTE),
  Tamperproof_Printer2	VARCHAR2(100 BYTE),
  Tamperproof_Printer2_Tray		  VARCHAR2(50 BYTE),
  Tamperproof_Printer3	VARCHAR2(100 BYTE),
  Tamperproof_Printer3_Tray		  VARCHAR2(50 BYTE),
  Tamperproof_Printer4	VARCHAR2(100 BYTE),
  Tamperproof_Printer4_Tray		 VARCHAR2(50 BYTE),
  Tamperproof_Printer5	VARCHAR2(100 BYTE),
  Tamperproof_Printer5_Tray		  VARCHAR2(50 BYTE),
  PCS_Tracking_Location		  VARCHAR2(50 BYTE),
  PhaIPPRINTER 	VARCHAR2(50 BYTE), 
  PhaIPWS		VARCHAR2(50 BYTE), 
  PhaIPInvSR1 	VARCHAR2(50 BYTE), 
  PhaIPInvSR2 	VARCHAR2(50 BYTE),
  SCS_Default_Login_Location		VARCHAR2(50 BYTE),
  Specimen_Label_Printer		VARCHAR2(50 BYTE),
  PhaRetailDevice        VARCHAR2(100 BYTE),
  UPDT_DT_TM  TIMESTAMP ,
  Last_Updated_By VARCHAR2(255 BYTE)
);


CREATE UNIQUE INDEX PK_LOCATIONS ON LOCATIONS
(CLIENTMNEMONIC, MILLENVIRONMENT, CLIENTNAME)
LOGGING
TABLESPACE CMSS_REPO_DATA
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          1M
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       2147483645
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOPARALLEL;


ALTER TABLE LOCATIONS ADD (
  CONSTRAINT PK_LOCATIONS PRIMARY KEY (CLIENTMNEMONIC, MILLENVIRONMENT, CLIENTNAME)
    USING INDEX 
    TABLESPACE CMSS_REPO_DATA
    PCTFREE    10
    INITRANS   2
    MAXTRANS   255
    STORAGE    (
                INITIAL          1M
                NEXT             1M
                MINEXTENTS       1
                MAXEXTENTS       2147483645
                PCTINCREASE      0
               ));



CREATE OR REPLACE PROCEDURE ALTER_TABLE_ADD (
P_TABLE_NAME VARCHAR2,
P_INPUT_COL_NAME VARCHAR2,
P_COL_DATA_TYPE VARCHAR2) 
AS
COL_EXIST_CNT NUMBER;
BEGIN
SELECT COUNT(COLUMN_NAME) INTO COL_EXIST_CNT FROM ALL_TAB_COLUMNS
WHERE TABLE_NAME = P_TABLE_NAME AND COLUMN_NAME = P_INPUT_COL_NAME;
IF COL_EXIST_CNT = 0 THEN
EXECUTE IMMEDIATE 'ALTER TABLE Locations ADD(
 AP_Image_Capture   VARCHAR2(50 BYTE),
 AP_Image_Station   VARCHAR2(50 BYTE)
)';
END IF;
END;
/
EXEC ALTER_TABLE_ADD ('LOCATIONS', 'AP_IMAGE_CAPTURE', 'NUMBER(9)');



CREATE OR REPLACE PROCEDURE ALTER_TABLE_ADD_2 (
P_TABLE_NAME VARCHAR2,
P_INPUT_COL_NAME VARCHAR2,
P_COL_DATA_TYPE VARCHAR2) 
AS
COL_EXIST_CNT NUMBER;
BEGIN
SELECT COUNT(COLUMN_NAME) INTO COL_EXIST_CNT FROM ALL_TAB_COLUMNS
WHERE TABLE_NAME = P_TABLE_NAME AND COLUMN_NAME = P_INPUT_COL_NAME;
IF COL_EXIST_CNT = 0 THEN
EXECUTE IMMEDIATE 'ALTER TABLE Locations ADD(
  Default_Tamperproof_Printer	VARCHAR2(100 BYTE),
  Default_Tamperproof_Print_Tray		  VARCHAR2(50 BYTE),
  Tamperproof_Printer2	VARCHAR2(100 BYTE),
  Tamperproof_Printer2_Tray		  VARCHAR2(50 BYTE),
  Tamperproof_Printer3	VARCHAR2(100 BYTE),
  Tamperproof_Printer3_Tray		 VARCHAR2(50 BYTE),
  Tamperproof_Printer4	VARCHAR2(100 BYTE),
  Tamperproof_Printer4_Tray		  VARCHAR2(50 BYTE),
  Tamperproof_Printer5	VARCHAR2(100 BYTE),
  Tamperproof_Printer5_Tray		VARCHAR2(50 BYTE)
)';
END IF;
END;
/
EXEC ALTER_TABLE_ADD_2 ('LOCATIONS', 'DEFAULT_TAMPERPROOF_PRINTER', 'NUMBER(9)');


CREATE OR REPLACE PROCEDURE ALTER_TABLE_ADD3 (
P_TABLE_NAME VARCHAR2,
P_INPUT_COL_NAME VARCHAR2,
P_COL_DATA_TYPE VARCHAR2) 
AS
COL_EXIST_CNT NUMBER;
BEGIN
SELECT COUNT(COLUMN_NAME) INTO COL_EXIST_CNT FROM ALL_TAB_COLUMNS
WHERE TABLE_NAME = P_TABLE_NAME AND COLUMN_NAME = P_INPUT_COL_NAME;
IF COL_EXIST_CNT = 0 THEN
EXECUTE IMMEDIATE 'ALTER TABLE Locations ADD(
 PCS_Tracking_Location   VARCHAR2(50 BYTE)
)';
END IF;
END;
/
EXEC ALTER_TABLE_ADD3 ('LOCATIONS', 'PCS_Tracking_Location', 'NUMBER(9)');


CREATE OR REPLACE PROCEDURE ALTER_TABLE_ADD4 (
P_TABLE_NAME VARCHAR2,
P_INPUT_COL_NAME VARCHAR2,
P_COL_DATA_TYPE VARCHAR2) 
AS
COL_EXIST_CNT NUMBER;
BEGIN
SELECT COUNT(COLUMN_NAME) INTO COL_EXIST_CNT FROM ALL_TAB_COLUMNS
WHERE TABLE_NAME = P_TABLE_NAME AND COLUMN_NAME = P_INPUT_COL_NAME;
IF COL_EXIST_CNT = 0 THEN
EXECUTE IMMEDIATE 'ALTER TABLE Locations ADD(
 PhaIPPRINTER 	VARCHAR2(50 BYTE), 
 PhaIPWS 		VARCHAR2(50 BYTE), 
 PhaIPInvSR1 	VARCHAR2(50 BYTE), 
 PhaIPInvSR2 	VARCHAR2(50 BYTE)
)';
END IF;
END;
/
EXEC ALTER_TABLE_ADD4 ('LOCATIONS', 'PhaIPPRINTER', 'VARCHAR2(50 BYTE)');

CREATE OR REPLACE PROCEDURE ALTER_TABLE_ADD5 (
P_TABLE_NAME VARCHAR2,
P_INPUT_COL_NAME VARCHAR2,
P_COL_DATA_TYPE VARCHAR2) 
AS
COL_EXIST_CNT NUMBER;
BEGIN
SELECT COUNT(COLUMN_NAME) INTO COL_EXIST_CNT FROM ALL_TAB_COLUMNS
WHERE TABLE_NAME = P_TABLE_NAME AND COLUMN_NAME = P_INPUT_COL_NAME;
IF COL_EXIST_CNT = 0 THEN
EXECUTE IMMEDIATE 'ALTER TABLE Locations ADD(
 SCS_Default_Login_Location 	VARCHAR2(50 BYTE), 
 Specimen_Label_Printer 		VARCHAR2(50 BYTE)
)';
END IF;
END;
/
EXEC ALTER_TABLE_ADD5 ('LOCATIONS', 'SCS_Default_Login_Location', 'VARCHAR2(100 BYTE)');

CREATE OR REPLACE PROCEDURE ALTER_TABLE_ADD6 (
P_TABLE_NAME VARCHAR2,
P_INPUT_COL_NAME VARCHAR2) 
AS
COL_EXIST_CNT NUMBER;
BEGIN
SELECT COUNT(COLUMN_NAME) INTO COL_EXIST_CNT FROM ALL_TAB_COLUMNS
WHERE TABLE_NAME = P_TABLE_NAME AND COLUMN_NAME = P_INPUT_COL_NAME;
IF COL_EXIST_CNT = 0 THEN
EXECUTE IMMEDIATE 'ALTER TABLE Locations ADD(
 PhaRetailDevice         VARCHAR2(100 BYTE)
)';
END IF;
END;
/
EXEC ALTER_TABLE_ADD6 ('LOCATIONS', 'PhaRetailDevice');

CREATE OR REPLACE PROCEDURE ALTER_TABLE_ADD7 (
P_TABLE_NAME VARCHAR2,
P_INPUT_COL_NAME VARCHAR2) 
AS
COL_EXIST_CNT NUMBER;
BEGIN
SELECT COUNT(COLUMN_NAME) INTO COL_EXIST_CNT FROM ALL_TAB_COLUMNS
WHERE TABLE_NAME = P_TABLE_NAME AND COLUMN_NAME = P_INPUT_COL_NAME;
IF COL_EXIST_CNT = 0 THEN
EXECUTE IMMEDIATE 'ALTER TABLE Locations ADD(
 UPDT_DT_TM  TIMESTAMP ,
 Last_Updated_By VARCHAR2(255 BYTE)
)';
END IF;
END;
/
EXEC ALTER_TABLE_ADD7 ('LOCATIONS', 'UPDT_DT_TM');
/